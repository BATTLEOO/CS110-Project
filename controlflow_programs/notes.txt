1. Provide a high-level description (ie, using minimal amount of technical jargon) of each problem
in no more than 100 words.

Problem 1 (Quadratic Equation): 1. create argument a,b,c in float type
                                2. create expression for discriminant
                                3. create if statement
                                    1) write the condition when a is equal to zero
                                        write "Value of a must not be 0" in standard output if true
                                    2) write elif statement when discriminant is less than zero
                                        write "Value...negative" in standard output if true
                                    3) write else statement if two if statement not statisfy
                                        write two expression for the root
                                        write two roots in standard output

Problem 2 (Wind Chill): 1. create t and v as float arguments
                        2. create the expression for the wind chill, in the code is w
                        3. write if statement
                            1) if t is bigger that 50
                                write "Value...50.." in standard output
                            2) write elif, if v is less than equal to 3
                                write "Value ... 3 mph" in standard output
                            3) write else statement if not touch any condition,
                                write w in standard output

Problem 3 (Day of the Week): 1. create m,d,y as int arguments
                             2. write the expression that is provided
                             3. write all the conditions
                                such as if dow is equal to zero, print sunday, and so on
                                Everytime meet condition, write in standard output

Problem 4 (Six-sided Die): 1. Set value to a random integer from 1 to 6.
                           2. use a empty string as initialize, so set output to ""
                              because we need to use output to print in standard output
                           3. create if statement and write all the condition, and
                              everytime the condition is meet, assign the value in output
                           4. Write output in standard output

Problem 5 (Playing Card): 1. Set rank to a random integer from 2 to 14
                          2. Set rankStr to a string corresponding to rank by using the if statement,
                             and write in standard output if meet the condition
                          3. Set suit to a random integer from 1 to 4
                          4. Set suitStr to a string corresponding to suit, and write in standard output if meet the condition

Problem 6 (Dragon Curve): 1. create n as int argument
                          2. set dragon and nogard equal to F
                          3. using assignment statement to swap each other -- the idea is the same as swapping variable
                             set range in 1 to n, and using for loop to repeat the process -- notice to use n + 1, if n will not include n
                             set dragon as a temp value
                             then set dragon if equal dragon + "L" + nogard
                             then set nogard is equal temp + "R" + nogard
                          4. write dragon in standard output

Problem 7 (Greatest Common Divisor): 1. create p ,q as int argument
                                     2. create condition when p % q is zero print the remainder, use while loop
                                     3. set the remainder expression
                                     4. everytime the new p will store the old q value
                                     5. everytime the new p will store the remainder value from this time
                                     6. write q in standard output

Problem 8 (Root Finding): 1. create k as int, mean the kth root of c
                          2. create c as float
                          3. create EPSILON in float, means the decimal places that wanted by the user
                          4. set t to c
                          5. create a loop |1 - c / t^k| > EPSILON, use while loop
                          6. write the function that is provided
                          7. write t in standard output

Problem 9 (Sum of Powers): 1. create n as int, create k as int
                           2. initial the value total to 0
                           3. create a for loop in range from 1 to the user input n
                                we add total with the output(i ** k) everytime --- until n (in code is n + 1)
                           4. after we finished the loop, print total in standard output

Problem 10 (Factorial Function): 1. write n as int as the user input
                                 2. initial result to 1
                                 3. create a for loop to repeat from 1 to n (n + 1 in code)
                                    result is equal to result * i
                                 4. write result in standard output

Problem 11 (Fibonacci Function): 1. create n as int
                                 2. set a is zero and b is equal to b
                                 3. create a for loop in range 2 to n
                                        1) create temp equal to a -- swap value in further
                                        2) a is equal to b -- we set b is equal to b
                                        3) b is equal to temp + b which we use the temp(old a)
                                 4. write b in standard output

Problem 12 (Primality Test): 1. create n as int
                             2. set i to 2
                             3. write while loop to repeat if i is less than equal to n/i
                                    1) write if statement -- if n % i == zero, if have zero remainder, break
                                    2) set i = i + 1
                             4. if n mod i is not equal to zero, it means that n is prime, write ture in standard output
                             5. else if n is not prime (means n mod i is equal to zero), write false to standard output

Problem 13 (Counting Primes): 1. create n as int
                              2. Set count to 0
                              3. for each i from 2 to n
                                    1)Set j (potential divisor of i) to 2.
                                       a) write while loop, As long as j is less than or equal to i / j
                                            if i mod j is equal to zero, than i is not a prime break
                                            increment j by one
                                       b) if i mod j is not equal to zero, than we add count by one
                              4. after done all the condition in the loop, we write count in standard output

Problem 14 (Perfect Numbers): 1. create n in int
                              2. write for in range in 2 to n
                                    1) set total to zero
                                    2) write for j in range from 1 to i // 2, because range do not accept float, so we use i//2 to result it to int
                                        a) write if if j mod i or i mod j have zero remainder
                                           if meet the if statement's condition, we add j to total
                                    3) if total is equal to i, write i in standard output if condition is satisfy

Problem 15 (Ramanujan Numbers):
1. Accept n as command-line argument
2. set a equal to 1
3. write while loop, repeat as long as a^3 ≤ n
    1) Set b (int) to a +1
    2) write while loop, repeat as long as a^3 +b^3 ≤ n
        a) Set c (int) to a +1
        b) write while loop, repeat as long as c^3 ≤ n
            c) Set d (int) to c +1
            d) write while loop, repeat as long as c^3 +d^3 ≤ n
                e)  Set x (int) to a^3 +b^3 and y (int) to c^3 +d^3
                f) If x = y, write “x = aˆ3+bˆ3 = cˆ3+dˆ3 if meet the condition, write in standard output
                g) Increment d by 1
            h) Increment c by 1
        i) Increment b by 1
    j) Increment a by 1

2. Did you receive help from anyone? List their names, status (classmate, course staff, other), and
the nature of help received.

Name                   Status           Help Received
----                   ------           -------------

...                    ...              ...

3. List any other comments here. Feel free to provide any feedback on how much you learned from
doing the assignment, and whether you enjoyed doing it.

...
